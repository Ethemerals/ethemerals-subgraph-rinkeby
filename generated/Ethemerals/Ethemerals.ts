// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AllowDelegatesChange extends ethereum.Event {
  get params(): AllowDelegatesChange__Params {
    return new AllowDelegatesChange__Params(this);
  }
}

export class AllowDelegatesChange__Params {
  _event: AllowDelegatesChange;

  constructor(event: AllowDelegatesChange) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get allow(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class ChangeRewards extends ethereum.Event {
  get params(): ChangeRewards__Params {
    return new ChangeRewards__Params(this);
  }
}

export class ChangeRewards__Params {
  _event: ChangeRewards;

  constructor(event: ChangeRewards) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get rewards(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get add(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get action(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class ChangeScore extends ethereum.Event {
  get params(): ChangeScore__Params {
    return new ChangeScore__Params(this);
  }
}

export class ChangeScore__Params {
  _event: ChangeScore;

  constructor(event: ChangeScore) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get score(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get add(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get rewards(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class DelegateChange extends ethereum.Event {
  get params(): DelegateChange__Params {
    return new DelegateChange__Params(this);
  }
}

export class DelegateChange__Params {
  _event: DelegateChange;

  constructor(event: DelegateChange) {
    this._event = event;
  }

  get delegate(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get add(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Mint extends ethereum.Event {
  get params(): Mint__Params {
    return new Mint__Params(this);
  }
}

export class Mint__Params {
  _event: Mint;

  constructor(event: Mint) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get elf(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get atk(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get def(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get spd(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PriceChange extends ethereum.Event {
  get params(): PriceChange__Params {
    return new PriceChange__Params(this);
  }
}

export class PriceChange__Params {
  _event: PriceChange;

  constructor(event: PriceChange) {
    this._event = event;
  }

  get price(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Ethemerals__getEthemeralResultValue0Struct extends ethereum.Tuple {
  get score(): i32 {
    return this[0].toI32();
  }

  get rewards(): BigInt {
    return this[1].toBigInt();
  }

  get atk(): i32 {
    return this[2].toI32();
  }

  get def(): i32 {
    return this[3].toI32();
  }

  get spd(): i32 {
    return this[4].toI32();
  }
}

export class Ethemerals extends ethereum.SmartContract {
  static bind(address: Address): Ethemerals {
    return new Ethemerals("Ethemerals", address);
  }

  balanceOf(owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getApproved(tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  maxMeralIndex(): BigInt {
    let result = super.call("maxMeralIndex", "maxMeralIndex():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxMeralIndex(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxMeralIndex",
      "maxMeralIndex():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxMeralSupply(): BigInt {
    let result = super.call("maxMeralSupply", "maxMeralSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxMeralSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxMeralSupply",
      "maxMeralSupply():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  meralSupply(): BigInt {
    let result = super.call("meralSupply", "meralSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_meralSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("meralSupply", "meralSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  mintPrice(): BigInt {
    let result = super.call("mintPrice", "mintPrice():(uint256)", []);

    return result[0].toBigInt();
  }

  try_mintPrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("mintPrice", "mintPrice():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerOf(tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  startingELF(): i32 {
    let result = super.call("startingELF", "startingELF():(uint16)", []);

    return result[0].toI32();
  }

  try_startingELF(): ethereum.CallResult<i32> {
    let result = super.tryCall("startingELF", "startingELF():(uint16)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenURI(tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getEthemeral(_tokenId: BigInt): Ethemerals__getEthemeralResultValue0Struct {
    let result = super.call(
      "getEthemeral",
      "getEthemeral(uint256):((uint16,uint32,uint16,uint16,uint16))",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return changetype<Ethemerals__getEthemeralResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getEthemeral(
    _tokenId: BigInt
  ): ethereum.CallResult<Ethemerals__getEthemeralResultValue0Struct> {
    let result = super.tryCall(
      "getEthemeral",
      "getEthemeral(uint256):((uint16,uint32,uint16,uint16,uint16))",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Ethemerals__getEthemeralResultValue0Struct>(value[0].toTuple())
    );
  }

  getMeralBase(_tokenId: BigInt): Array<i32> {
    let result = super.call(
      "getMeralBase",
      "getMeralBase(uint256):(uint16[])",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toI32Array();
  }

  try_getMeralBase(_tokenId: BigInt): ethereum.CallResult<Array<i32>> {
    let result = super.tryCall(
      "getMeralBase",
      "getMeralBase(uint256):(uint16[])",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32Array());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isApprovedForAll(_owner: Address, _operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    _owner: Address,
    _operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get tUri(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class MintMeralCall extends ethereum.Call {
  get inputs(): MintMeralCall__Inputs {
    return new MintMeralCall__Inputs(this);
  }

  get outputs(): MintMeralCall__Outputs {
    return new MintMeralCall__Outputs(this);
  }
}

export class MintMeralCall__Inputs {
  _call: MintMeralCall;

  constructor(call: MintMeralCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class MintMeralCall__Outputs {
  _call: MintMeralCall;

  constructor(call: MintMeralCall) {
    this._call = call;
  }
}

export class MintMeralsCall extends ethereum.Call {
  get inputs(): MintMeralsCall__Inputs {
    return new MintMeralsCall__Inputs(this);
  }

  get outputs(): MintMeralsCall__Outputs {
    return new MintMeralsCall__Outputs(this);
  }
}

export class MintMeralsCall__Inputs {
  _call: MintMeralsCall;

  constructor(call: MintMeralsCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class MintMeralsCall__Outputs {
  _call: MintMeralsCall;

  constructor(call: MintMeralsCall) {
    this._call = call;
  }
}

export class SetAllowDelegatesCall extends ethereum.Call {
  get inputs(): SetAllowDelegatesCall__Inputs {
    return new SetAllowDelegatesCall__Inputs(this);
  }

  get outputs(): SetAllowDelegatesCall__Outputs {
    return new SetAllowDelegatesCall__Outputs(this);
  }
}

export class SetAllowDelegatesCall__Inputs {
  _call: SetAllowDelegatesCall;

  constructor(call: SetAllowDelegatesCall) {
    this._call = call;
  }

  get allow(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetAllowDelegatesCall__Outputs {
  _call: SetAllowDelegatesCall;

  constructor(call: SetAllowDelegatesCall) {
    this._call = call;
  }
}

export class ChangeScoreCall extends ethereum.Call {
  get inputs(): ChangeScoreCall__Inputs {
    return new ChangeScoreCall__Inputs(this);
  }

  get outputs(): ChangeScoreCall__Outputs {
    return new ChangeScoreCall__Outputs(this);
  }
}

export class ChangeScoreCall__Inputs {
  _call: ChangeScoreCall;

  constructor(call: ChangeScoreCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get offset(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get add(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ChangeScoreCall__Outputs {
  _call: ChangeScoreCall;

  constructor(call: ChangeScoreCall) {
    this._call = call;
  }
}

export class ChangeRewardsCall extends ethereum.Call {
  get inputs(): ChangeRewardsCall__Inputs {
    return new ChangeRewardsCall__Inputs(this);
  }

  get outputs(): ChangeRewardsCall__Outputs {
    return new ChangeRewardsCall__Outputs(this);
  }
}

export class ChangeRewardsCall__Inputs {
  _call: ChangeRewardsCall;

  constructor(call: ChangeRewardsCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get offset(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get add(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get action(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class ChangeRewardsCall__Outputs {
  _call: ChangeRewardsCall;

  constructor(call: ChangeRewardsCall) {
    this._call = call;
  }
}

export class MintReserveCall extends ethereum.Call {
  get inputs(): MintReserveCall__Inputs {
    return new MintReserveCall__Inputs(this);
  }

  get outputs(): MintReserveCall__Outputs {
    return new MintReserveCall__Outputs(this);
  }
}

export class MintReserveCall__Inputs {
  _call: MintReserveCall;

  constructor(call: MintReserveCall) {
    this._call = call;
  }
}

export class MintReserveCall__Outputs {
  _call: MintReserveCall;

  constructor(call: MintReserveCall) {
    this._call = call;
  }
}

export class MintMeralsAdminCall extends ethereum.Call {
  get inputs(): MintMeralsAdminCall__Inputs {
    return new MintMeralsAdminCall__Inputs(this);
  }

  get outputs(): MintMeralsAdminCall__Outputs {
    return new MintMeralsAdminCall__Outputs(this);
  }
}

export class MintMeralsAdminCall__Inputs {
  _call: MintMeralsAdminCall;

  constructor(call: MintMeralsAdminCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MintMeralsAdminCall__Outputs {
  _call: MintMeralsAdminCall;

  constructor(call: MintMeralsAdminCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class SetPriceCall extends ethereum.Call {
  get inputs(): SetPriceCall__Inputs {
    return new SetPriceCall__Inputs(this);
  }

  get outputs(): SetPriceCall__Outputs {
    return new SetPriceCall__Outputs(this);
  }
}

export class SetPriceCall__Inputs {
  _call: SetPriceCall;

  constructor(call: SetPriceCall) {
    this._call = call;
  }

  get _price(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPriceCall__Outputs {
  _call: SetPriceCall;

  constructor(call: SetPriceCall) {
    this._call = call;
  }
}

export class SetMaxMeralIndexCall extends ethereum.Call {
  get inputs(): SetMaxMeralIndexCall__Inputs {
    return new SetMaxMeralIndexCall__Inputs(this);
  }

  get outputs(): SetMaxMeralIndexCall__Outputs {
    return new SetMaxMeralIndexCall__Outputs(this);
  }
}

export class SetMaxMeralIndexCall__Inputs {
  _call: SetMaxMeralIndexCall;

  constructor(call: SetMaxMeralIndexCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxMeralIndexCall__Outputs {
  _call: SetMaxMeralIndexCall;

  constructor(call: SetMaxMeralIndexCall) {
    this._call = call;
  }
}

export class AddDelegateCall extends ethereum.Call {
  get inputs(): AddDelegateCall__Inputs {
    return new AddDelegateCall__Inputs(this);
  }

  get outputs(): AddDelegateCall__Outputs {
    return new AddDelegateCall__Outputs(this);
  }
}

export class AddDelegateCall__Inputs {
  _call: AddDelegateCall;

  constructor(call: AddDelegateCall) {
    this._call = call;
  }

  get _delegate(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get add(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class AddDelegateCall__Outputs {
  _call: AddDelegateCall;

  constructor(call: AddDelegateCall) {
    this._call = call;
  }
}

export class SetBaseURICall extends ethereum.Call {
  get inputs(): SetBaseURICall__Inputs {
    return new SetBaseURICall__Inputs(this);
  }

  get outputs(): SetBaseURICall__Outputs {
    return new SetBaseURICall__Outputs(this);
  }
}

export class SetBaseURICall__Inputs {
  _call: SetBaseURICall;

  constructor(call: SetBaseURICall) {
    this._call = call;
  }

  get newuri(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetBaseURICall__Outputs {
  _call: SetBaseURICall;

  constructor(call: SetBaseURICall) {
    this._call = call;
  }
}

export class SetMeralBaseCall extends ethereum.Call {
  get inputs(): SetMeralBaseCall__Inputs {
    return new SetMeralBaseCall__Inputs(this);
  }

  get outputs(): SetMeralBaseCall__Outputs {
    return new SetMeralBaseCall__Outputs(this);
  }
}

export class SetMeralBaseCall__Inputs {
  _call: SetMeralBaseCall;

  constructor(call: SetMeralBaseCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _cmId(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _element(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class SetMeralBaseCall__Outputs {
  _call: SetMeralBaseCall;

  constructor(call: SetMeralBaseCall) {
    this._call = call;
  }
}
